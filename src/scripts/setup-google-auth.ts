// scripts/setup-google-auth.ts - Execute uma vez para obter refresh token

import readline from 'readline';
import { getAuthUrl, getTokens } from '../config/google_calendar';

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout,
});

async function setupGoogleAuth() {
  console.log('üîê Configura√ß√£o de Autentica√ß√£o Google Calendar\n');
  
  // Passo 1: Gerar URL de autoriza√ß√£o
  const authUrl = getAuthUrl();
  console.log('1Ô∏è‚É£ Acesse esta URL no navegador:');
  console.log(`\n${authUrl}\n`);
  console.log('2Ô∏è‚É£ Autorize o aplicativo e copie o c√≥digo da URL de retorno\n');
  
  // Passo 2: Obter c√≥digo do usu√°rio
  rl.question('3Ô∏è‚É£ Cole o c√≥digo aqui: ', async (code) => {
    try {
      const tokens = await getTokens(code);
      
      console.log('\n‚úÖ Tokens obtidos com sucesso!');
      console.log('\nüìù Adicione estas vari√°veis ao seu .env:');
      console.log(`GOOGLE_REFRESH_TOKEN=${tokens.refresh_token}`);
      
      if (tokens.access_token) {
        console.log(`GOOGLE_ACCESS_TOKEN=${tokens.access_token}`);
      }
      
      console.log('\nüéâ Configura√ß√£o conclu√≠da! Reinicie o servidor.');
      
    } catch (error) {
      console.error('‚ùå Erro ao obter tokens:', error);
    }
    
    rl.close();
  });
}

setupGoogleAuth().catch(console.error);